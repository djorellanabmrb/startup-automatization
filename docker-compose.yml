version: "3.7"

volumes:
    postgres-data:
    mongo-data:

networks:
    private-network:
        driver: bridge

services:
    ingress:
        image: traefik:v2.0
        command:
            - "--api.insecure=false"
            - "--providers.docker"
            - "--providers.docker.watch=true"
            - "--providers.docker.exposedByDefault=false"
            - "--providers.docker.endpoint=unix:///var/run/docker.sock"
            - "--providers.docker.network=private-network"
            - "--entryPoints.web.address=:443"
            - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
            - "--certificatesresolvers.myresolver.acme.email=luis@twowheelstogo.com"
            - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
        ports:
            - "443:443"
        networks:
            - private-network
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - "./letsencrypt:/letsencrypt"
    postgis:
        build: ./backend-databases/postgis
        volumes:
            - postgres-data:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=${SEQUELIZE_USERNAME}
            - POSTGRES_PASSWORD=${SEQUELIZE_PASSWORD}
            - POSTGRES_DB=${SEQUELIZE_DATABASE}
        ports:
            - ${SEQUELIZE_PORT}:5432
        networks:
            - private-network
    mongodb:
        image: mongo:latest
        restart: always
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
            - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
        ports:
            - 27017:27017
        volumes:
            - ./backend-databases/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
            - mongo-data:/data/db
        networks:
            - private-network
    orm-twtg:
        build:
            context: ./backend-orm-twtg
        environment:
            - SEQUELIZE_USERNAME=${SEQUELIZE_USERNAME}
            - SEQUELIZE_PASSWORD=${SEQUELIZE_PASSWORD}
            - SEQUELIZE_DATABASE=${SEQUELIZE_DATABASE}
            - SEQUELIZE_HOST=${SEQUELIZE_HOST}
            - SEQUELIZE_DIALECT=${SEQUELIZE_DIALECT}
            - SEQUELIZE_PORT=${SEQUELIZE_PORT}
            - WAIT_HOSTS=postgis:5432
            - WAIT_HOSTS_TIMEOUT=300
            - WAIT_SLEEP_INTERVAL=30
            - WAIT_HOST_CONNECT_TIMEOUT=30
        networks:
            - private-network
        depends_on:
            - postgis 
    security:
        build:
            context: ./backend-security-service-twtg
        environment:
            - API_SECURITY_PORT=${API_SECURITY_PORT}
            - FIREBASE_TYPE=${FIREBASE_TYPE}
            - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
            - FIREBASE_PRIVATE_KEY_ID=${FIREBASE_PRIVATE_KEY_ID}
            - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
            - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
            - FIREBASE_CLIENT_ID=${FIREBASE_CLIENT_ID}
            - FIREBASE_AUTH_URI=${FIREBASE_AUTH_URI}
            - FIREBASE_TOKEN_URI${FIREBASE_TOKEN_URI}
            - FIREBASE_AUTH_PROVIDER_X509_CERT_URL=${FIREBASE_AUTH_PROVIDER_X509_CERT_URL}
            - FIREBASE_DATABASEURL=${FIREBASE_CLIENT_X509_CERT_URL}
            - JWT_SECRET=${JWT_SECRET}
            - JWT_SERVICE_ACCOUNT_EMAIL=${JWT_SERVICE_ACCOUNT_EMAIL}
            - JWT_EXP_TIME=${JWT_EXP_TIME}
            - MONGO_USERNAME=${MONGO_USERNAME}
            - MONGO_PASSWORD=${MONGO_PASSWORD}
            - MONGO_DATABASE=${MONGO_DATABASE}
            - MONGO_HOST=${MONGO_HOST}
            - MONGO_PORT=${MONGO_PORT}
            - WAIT_HOSTS=mongodb:27017
            - WAIT_HOSTS_TIMEOUT=300
            - WAIT_SLEEP_INTERVAL=30
            - WAIT_HOST_CONNECT_TIMEOUT=30
            - SSH_PRIVATE=${SSH_PRIVATE}
            - SSH_PUBLIC=${SSH_PUBLIC}
            - SSH_KNOWN_HOSTS=${SSH_KNOWN_HOSTS}
        networks:
            - private-network
        depends_on:
            - mongodb
        ports:
            - ${API_SECURITY_PORT}:${API_SECURITY_PORT}            
        labels:
            - traefik.enable=true
            - traefik.http.routers.security.rule=Host(`devapi.twowheelstogo.com`) && PathPrefix(`/security`)
            - traefik.http.routers.security.entryPoints=web
            - traefik.http.routers.security.service=security-service
            - traefik.http.services.security-service.loadbalancer.server.port=${API_SECURITY_PORT}
            - traefik.http.routers.security.tls.certresolver=myresolver
            - traefik.docker.network=private-network
    catalogs-service:
        build:
            context: ./backend-catalogs-service-twtg
        environment:
            - API_CATALOGS_PORT=${API_CATALOGS_PORT}
            - SEQUELIZE_USERNAME=${SEQUELIZE_USERNAME}
            - SEQUELIZE_PASSWORD=${SEQUELIZE_PASSWORD}
            - SEQUELIZE_DATABASE=${SEQUELIZE_DATABASE}
            - SEQUELIZE_HOST=${SEQUELIZE_HOST}
            - SEQUELIZE_DIALECT=${SEQUELIZE_DIALECT}
            - SEQUELIZE_PORT=${SEQUELIZE_PORT}
            - WAIT_HOSTS=postgis:5432
            - WAIT_HOSTS_TIMEOUT=300
            - WAIT_SLEEP_INTERVAL=30
            - WAIT_HOST_CONNECT_TIMEOUT=30
        networks:
            - private-network
        depends_on:
            - postgis
        labels:
            - traefik.enable=true
            - traefik.http.routers.catalogs.rule=Host(`devapi.twowheelstogo.com`) && PathPrefix(`/catalogs-service`)
            - traefik.http.routers.catalogs.entryPoints=web
            - traefik.http.routers.catalogs.service=catalogs-service
            - traefik.http.services.catalogs-service.loadbalancer.server.port=${API_CATALOGS_PORT}
            - traefik.http.routers.catalogs.tls.certresolver=myresolver
            - traefik.docker.network=private-network
        ports:
            - ${API_CATALOGS_PORT}:${API_CATALOGS_PORT}    
    companies:
        build:
            context: ./backend-company-service-twtg
        environment:
            - API_COMPANY_PORT=${API_COMPANY_PORT}
            - SEQUELIZE_USERNAME=${SEQUELIZE_USERNAME}
            - SEQUELIZE_PASSWORD=${SEQUELIZE_PASSWORD}
            - SEQUELIZE_DATABASE=${SEQUELIZE_DATABASE}
            - SEQUELIZE_HOST=${SEQUELIZE_HOST}
            - SEQUELIZE_DIALECT=${SEQUELIZE_DIALECT}
            - SEQUELIZE_PORT=${SEQUELIZE_PORT}
            - WAIT_HOSTS=postgis:5432
            - WAIT_HOSTS_TIMEOUT=300
            - WAIT_SLEEP_INTERVAL=30
            - WAIT_HOST_CONNECT_TIMEOUT=30
            - JWT_EXP_TIME=${JWT_EXP_TIME}
            - JWT_SERVICE_ACCOUNT_EMAIL=${JWT_SERVICE_ACCOUNT_EMAIL}
            - JWT_SECRET=${JWT_SECRET}
            - SERVER_API_HOSTNAME=${SERVER_API_HOSTNAME}
            - SERVER_API_PROTOCOL=${SERVER_API_PROTOCOL}
            - FIREBASE_STORAGEBUCKET=${FIREBASE_STORAGEBUCKET}
            - FIREBASE_CLIENT_X509_CERT_URL=${FIREBASE_CLIENT_X509_CERT_URL}
            - FIREBASE_AUTH_PROVIDER_X509_CERT_URL=${FIREBASE_AUTH_PROVIDER_X509_CERT_URL}
            - FIREBASE_TOKEN_URI=${FIREBASE_TOKEN_URI}
            - FIREBASE_AUTH_URI=${FIREBASE_AUTH_URI}
            - FIREBASE_CLIENT_ID=${FIREBASE_CLIENT_ID}
            - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
            - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
            - FIREBASE_PRIVATE_KEY_ID=${FIREBASE_PRIVATE_KEY_ID}
            - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
            - FIREBASE_TYPE=${FIREBASE_TYPE}
            - MONGO_USERNAME=${MONGO_USERNAME}
            - MONGO_PASSWORD=${MONGO_PASSWORD}
            - MONGO_DATABASE=${MONGO_DATABASE}
            - MONGO_HOST=${MONGO_HOST}
            - MONGO_PORT=${MONGO_PORT}
            - GOOGLE_KEY=${GOOGLE_MAPS_API_KEY}
        networks:
            - private-network
        depends_on:
            - postgis
        labels:
            - traefik.enable=true
            - traefik.http.routers.companies.rule=Host(`devapi.twowheelstogo.com`) && PathPrefix(`/companies-service`)
            - traefik.http.routers.companies.entryPoints=web
            - traefik.http.routers.companies.service=companies-service
            - traefik.http.services.companies-service.loadbalancer.server.port=${API_COMPANY_PORT}
            - traefik.http.routers.companies.tls.certresolver=myresolver
            - traefik.docker.network=private-network
        ports:
            - ${API_COMPANY_PORT}:${API_COMPANY_PORT}  
    deliveries-service:
        build:
            context: ./backend-api-order
        environment:
            - API_DELIVERIES_PORT=${API_DELIVERIES_PORT}
            - FIREBASE_TYPE=${FIREBASE_TYPE}
            - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
            - FIREBASE_PRIVATE_KEY_ID=${FIREBASE_PRIVATE_KEY_ID}
            - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
            - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
            - FIREBASE_CLIENT_ID=${FIREBASE_CLIENT_ID}
            - FIREBASE_AUTH_URI=${FIREBASE_AUTH_URI}
            - FIREBASE_TOKEN_URI${FIREBASE_TOKEN_URI}
            - FIREBASE_AUTH_PROVIDER_X509_CERT_URL=${FIREBASE_AUTH_PROVIDER_X509_CERT_URL}
            - FIREBASE_DATABASEURL=${FIREBASE_CLIENT_X509_CERT_URL}
            - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}
        networks:
            - private-network
        ports:
            - ${API_DELIVERIES_PORT}:${API_DELIVERIES_PORT}            
        labels:
            - traefik.enable=true
            - traefik.http.routers.deliveries.rule=Host(`devapi.twowheelstogo.com`) && PathPrefix(`/deliveries-service`)
            - traefik.http.routers.deliveries.entryPoints=web
            - traefik.http.routers.deliveries.service=deliveries-service
            - traefik.http.services.deliveries-service.loadbalancer.server.port=${API_DELIVERIES_PORT}
            - traefik.http.routers.deliveries.tls.certresolver=myresolver
            - traefik.docker.network=private-network
